<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="OpenProject.Code.OpenProjectSourceJson" locale="">
  <web>OpenProject.Code</web>
  <name>OpenProjectSourceJson</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>OpenProjectSourceJson</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#if($hasAdmin)
  #set ($configClassName = 'OpenProject.Code.OpenProjectConnectionClass')

  #set ($offset = $numbertool.toNumber($request.get('offset')).intValue())
  #set ($offset = $offset - 1)
  #if(!$offset || $offset &lt;= 0)
    #set ($offset = 0)
  #end

  #set ($limit = $numbertool.toNumber($request.get('limit')).intValue())
  #if (!$limit)
    #set ($limit = 10)
  #end

  #set ($query =
    "from doc.object($configClassName) as connection where connection.connectionName like :connectionName and connection.serverURL like :serverURL and connection.clientId like :clientId")

  #set ($filterConnectionName = $request.get("connectionName"))
  #set ($filterServerURL = $request.get("serverURL"))
  #set ($filterClientId = $request.get("clientId"))
  #set ($connectionNameParameter = $services.query.parameter().anyChars().literal("$!filterConnectionName").anyChars()))
  #set ($serverURLParameter = $services.query.parameter().anyChars().literal("$!filterServerURL").anyChars()))
  #set ($clientIdParameter = $services.query.parameter().anyChars().literal("$!filterClientId").anyChars()))
  #set ($bindedQuery = $services.query.xwql($query).bindValue('connectionName', $connectionNameParameter).bindValue('serverURL', $serverURLParameter).bindValue('clientId', $clientIdParameter))

  #set ($totalRows = $bindedQuery.count())

  #set ($connectionsDocs = $bindedQuery.setOffset($offset).setLimit($limit).execute())

  #set ($results = [])

  #foreach ($connectionDoc in $connectionsDocs)
    #set ($document = $xwiki.getDocument($connectionDoc))
    #set ($connection = $document.getObject($configClassName))
    #set ($discard = $results.add($connection))
  #end

  #set ($json = {
    "totalrows": $totalRows,
    "matchingtags": {},
    "tags" : [],
    "returnedrows": $results.size(),
    "offset": $offset,
    "reqNo": $numbertool.toNumber($request.reqNo).intValue(),
    "rows" : []
  })

  #foreach ($result in $results)
    #set ($documentReference = $result.getDocumentReference())
    #set ($connectionName = $escapetool.xml($result.get("connectionName")))
    #set ($serverURL = $escapetool.xml($result.get("serverURL")))
    #set ($clientId = $escapetool.xml($result.get("clientId")))
    #set ($clientSecret = $escapetool.xml($result.get("clientSecret")))
    #set ($connectionNameHtml = "&lt;span class='text-muted'&gt;$connectionName&lt;/span&gt;")
    #set ($serverURLHtml = "&lt;a href='$serverURL' target='_blank'&gt;$!result.get('serverURL')&lt;/a&gt;")
    #set ($clientIdHtml = "&lt;span class='text-primary'&gt;$clientId&lt;/span&gt;")
    #set ($clientSecretHtml = "&lt;span class='text-primary h1'&gt;••••••••&lt;/span&gt;")
    #set ($isAuthorizedToOP = $services.openproject.isUserAuthorized($connectionName))
    #set ($authLink = $xwiki.getURL('OpenProject.Code.RenewOAuthConnection', 'view', $escapetool.url({
        'connectionName': $connectionName,
        'redirectUrl': $xwiki.getURL('XWiki.XWikiPreferences', 'admin', 'editor=globaladmin&amp;section=OpenProject'),
        'token': $services.csrf.token})))
    #set ($actionsHTML = "&lt;div class='displayer-actions'&gt;&lt;a
      class='edit-button action'
      href='#'
      name='edit-connection'
      data-connection-name=$connectionName
      data-server-url=$serverURL
      data-client-id=$clientId
      data-client-secret=$clientSecret
      data-edit-document-reference=$documentReference
    >$services.icon.renderHTML('pencil')&lt;/span&gt;&lt;/a&gt;&lt;a
      class='delete-button action'
      name='delete-connection'
      href='#'
      data-connection-name=$connectionName
      data-delete-document-reference=$documentReference
    >$services.icon.renderHTML('trash')&lt;/span&gt;&lt;/a&gt;")
    #if (!$isAuthorizedToOP)
      #set ($actionsHTML = "${actionsHTML}&lt;a
      class='op-auth-button action'
      name='authorize-connection'
      href=$authLink
    >$services.icon.renderHTML('unlock')&lt;/a&gt;&lt;/div&gt;")
    #end
    #set($discard = $json.rows.add({
      "connectionName" : $connectionNameHtml,
      "serverURL" : $serverURLHtml,
      "clientId" : $clientIdHtml,
      "clientSecret" : $clientSecretHtml,
      "isAuthorized": $services.localization.render("openproject.config.isAuthorized.${isAuthorizedToOP}"),
      "actions" : $actionsHTML
        }))
  #end
  #jsonResponse($json)
#else
  {{info}}
    $escapetool.xml($services.localization.render('openproject.config.noRights'))
  {{/info}}
#end
{{/velocity}}</content>
</xwikidoc>
